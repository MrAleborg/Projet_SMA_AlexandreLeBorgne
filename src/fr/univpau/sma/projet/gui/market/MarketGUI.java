package fr.univpau.sma.projet.gui.market;

import jade.core.AID;

import java.awt.HeadlessException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import fr.univpau.sma.projet.agent.MarketAgent;
import fr.univpau.sma.projet.objects.Auction;


/**
 *
 * @author mraleborg
 */
public class MarketGUI extends javax.swing.JFrame {



	List<Auction> _Auctions = new ArrayList<Auction>();
	List<Auction> _PastAuctions = new ArrayList<Auction>();
	List<AID> _TakerAgents = new ArrayList<AID>();
	
	HashMap<AID, List<Auction>> _mappingAuctions = new HashMap<AID, List<Auction>>();
	
	MarketCurrentAuctionsTable modele;
	MarketPastAuctionsTable modele1;
	
	MarketAgent _agent;
	
    public MarketGUI(List<Auction> _Auctions,
			HashMap<AID, List<Auction>> _mappingAuctions, MarketAgent _agent)
			throws HeadlessException {
        initComponents();
		this._Auctions = _Auctions;
		this._mappingAuctions = _mappingAuctions;
		this._agent = _agent;
	}

	/**
     * Creates new form MarketGUI
     */
    public MarketGUI() {
        initComponents();
    }
    
    public void addAuction(Auction auction)
    {
    	this._Auctions.add(auction);
    	this.modele.addAuction(auction);
    }
    
    public void removeAuction(Auction auction)
    {
    	int i = this._Auctions.indexOf(auction);
    	this.modele.removeAuction(i);
    	this._Auctions.remove(i);
    }

    public void addParticipating(AID tak, Auction auc)
    {
    	if(_mappingAuctions.containsKey(tak))
    		_mappingAuctions.get(tak).add(auc);
    	else
		{
    		List<Auction> l = new ArrayList<Auction>();
    		l.add(auc);
    		_mappingAuctions.put(tak, l);
		}
    	modele.addParticipating(tak, auc);
    }
    
    public void removeParticipating(AID tak)
    {
    	if(_mappingAuctions.containsKey(tak))
    	{
    		_mappingAuctions.remove(tak);
    		modele.removeParticipating(tak);
    	}
    	
    }
    
    public void addPastAuction(Auction a, String s)
    {
    	modele1.addAuction(a, s);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

    	this.setTitle("Market Agent -- Black-Market");
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		modele = new MarketCurrentAuctionsTable(_Auctions, _mappingAuctions);
		jTable1.setModel(modele);
		
        jScrollPane1.setViewportView(jTable1);

        jTabbedPane2.addTab("Enchères en cours", jScrollPane1);

		modele1 = new MarketPastAuctionsTable();
		jTable2.setModel(modele1);
        jScrollPane2.setViewportView(jTable2);

        jTabbedPane2.addTab("Enchères terminées", jScrollPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 877, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MarketGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MarketGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MarketGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MarketGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MarketGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration                   
}

